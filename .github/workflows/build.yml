name: Build

on:
  pull_request:
    branches:
      - qa
      - staging
      - main
    types:
      - closed

jobs:
  check-if-merged:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - run: echo "Merged pull request detected"
      - run: echo "Running with GITHUB_REF=$GITHUB_REF"
      - run: echo "Running with GITHUB_HEAD_REF=$GITHUB_HEAD_REF"

  bump-version:
    runs-on: ubuntu-latest
    needs: check-if-merged
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version and push
        run: |
          poetry run cz bump --yes
          git push --force
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: windows-latest
    needs: bump-version
    if: |
      always() &&
      (needs.bump-version.result == 'success' || needs.bump-version.result == 'skipped')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Build binaries
        run: |
          poetry run python ./scripts/windows_version_file.py > ./version.txt
          poetry run pyinstaller --icon=assets/logo-rewsty.ico --onefile rewst_remote_agent.py    --version-file=./version.txt
          poetry run pyinstaller --icon=assets/logo-rewsty.ico --onefile rewst_service_manager.py --version-file=./version.txt
          poetry run pyinstaller --icon=assets/logo-rewsty.ico --onefile rewst_agent_config.py    --version-file=./version.txt
          poetry run pyinstaller --icon=assets/logo-rewsty.ico --onefile rewst_windows_service.py --version-file=./version.txt

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: windows-compiled-assets
          path: |
            ./dist/rewst_windows_service.exe
            ./dist/rewst_service_manager.exe
            ./dist/rewst_remote_agent.exe
            ./dist/rewst_agent_config.exe

  sign:
    runs-on: windows-latest
    needs: build
    if: |
      always() &&
      needs.build.result == 'success' &&
      (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Download compiled assets
        uses: actions/download-artifact@v4
        with:
          name: windows-compiled-assets
          path: ./dist

      - name: Sign binaries
        shell: pwsh
        run: ./scripts/ssl_com_sign_binaries.ps1 -username '${{ secrets.SSL_COM_USERNAME }}' -password '${{ secrets.SSL_COM_PASSWORD }}' -credentialId '${{ secrets.SSL_COM_CREDENTIAL_ID }}' -totpSecret '${{ secrets.SSL_COM_OTP }}'

      - name: Generate checksums
        run: |
          Get-FileHash -Path ./dist/signed/rewst_remote_agent.exe    -Algorithm SHA256 | Format-List | Out-File -FilePath ./dist/signed/rewst_remote_agent.exe.sha256
          Get-FileHash -Path ./dist/signed/rewst_service_manager.exe -Algorithm SHA256 | Format-List | Out-File -FilePath ./dist/signed/rewst_service_manager.exe.sha256
          Get-FileHash -Path ./dist/signed/rewst_agent_config.exe    -Algorithm SHA256 | Format-List | Out-File -FilePath ./dist/signed/rewst_agent_config.exe.sha256
          Get-FileHash -Path ./dist/signed/rewst_windows_service.exe -Algorithm SHA256 | Format-List | Out-File -FilePath ./dist/signed/rewst_windows_service.exe.sha256

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: windows-signed-assets
          path: |
            ./dist/signed/rewst_windows_service.exe
            ./dist/signed/rewst_service_manager.exe
            ./dist/signed/rewst_remote_agent.exe
            ./dist/signed/rewst_agent_config.exe
            ./dist/signed/rewst_windows_service.exe.sha256
            ./dist/signed/rewst_service_manager.exe.sha256
            ./dist/signed/rewst_remote_agent.exe.sha256
            ./dist/signed/rewst_agent_config.exe.sha256

  release:
    runs-on: ubuntu-latest
    needs: sign
    if: |
      always() &&
      needs.sign.result == 'success' &&
      github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
  
      - name: Install poetry
        run: pip install poetry
      
      - name: Extract version
        shell: bash
        run: echo "VERSION=v$(poetry version --short)" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $VERSION
          release_name: Release $VERSION
          draft: false
          prerelease: false
      
      - name: Download all assets
        uses: actions/download-artifact@v4
        with:
          name: windows-signed-assets
          path: ./dist

      - name: Upload assets (rewst_windows_service)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rewst_windows_service.exe
          asset_name: rewst_windows_service.win.exe
          asset_content_type: application/octet-stream

      - name: Upload assets (rewst_remote_agent)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rewst_remote_agent.exe
          asset_name: rewst_remote_agent.win.exe
          asset_content_type: application/octet-stream

      - name: Upload assets (rewst_service_manager)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rewst_service_manager.exe
          asset_name: rewst_service_manager.win.exe
          asset_content_type: application/octet-stream

      - name: Upload assets (rewst_remote_agent)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rewst_remote_agent.exe
          asset_name: rewst_remote_agent.win.exe
          asset_content_type: application/octet-stream
